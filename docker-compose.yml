version: "3.9"

services:
  app:
    build: .
    image: rezztoran-be
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/rezztoran?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      jwt-variables.KEY: rezztoran
      SPRING_PROFILES_ACTIVE: prod
      BOOTSTRAP_SERVERS: broker:29092
      LOCALSTACK_URL: http://localstack:4566
    env_file:
      - dev.env
    depends_on:
      - db
    #command: [ "java", "-jar", "rezztoran-be-0.0.1-SNAPSHOT.jar" ]
    restart: always
    networks:
      - shared-net

  db:
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: rezztoran
      MYSQL_PASSWORD: 1234
    ports:
      - 3307:3306
    volumes:
      - db_data:/var/lib/mysql
      #- ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - shared-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always
    networks:
      - shared-net
    ports:
      - 2181:2181
  #    volumes:
  #      - ./tmp/zookeeper/data:/var/lib/zookeeper/data
  #      - ./tmp/zookeeper/logs:/var/lib/zookeeper/logs
  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: always
    networks:
      - shared-net
  #    volumes:
  #      - ./tmp/kafka/data:/var/lib/kafka/data
  #      - ./tmp/kafka/logs:/var/lib/kafka/logs

  kafka-ui:
    restart: always
    container_name: kafka-ui
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - "9000:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181
    networks:
      - shared-net

  localstack:
    restart: always
    hostname: localstack
    image: localstack/localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DOCKER_HOST=unix:///var/run/docker.sock
      #- HOSTNAME_EXTERNAL=localstack
      - LEGACY_DIRECTORIES=1
    volumes:
      - "/var/lib/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

    networks:
      - shared-net



  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - shared-net


  grafana:
    image: grafana/grafana-oss:8.5.2
    pull_policy: always
    container_name: grafana
    restart: unless-stopped
    ports:
      - "4000:3000"
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    networks:
      - shared-net




volumes:
  db_data:

networks:
  shared-net:
    driver: bridge