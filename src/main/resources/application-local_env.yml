application-description: Rezztoran
application-version: 1.0

app-context: http://localhost:8082

server:
  error:
    whitelabel:
      enabled: false
  port: 8082
spring:
  config:
    activate:
      on-profile: local_env
  datasource:
    password: 1234
    url: jdbc:mysql://localhost:3307/rezztoran?createDatabaseIfNotExist=true
    username: root
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    consumers:
      default-group-id: group
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topics:
      book-created: book-created
      book-reminder: book-reminder
      book-cancelled-restaurant: book-cancelled-restaurant
      password-reset: password-reset

spring.servlet.multipart:
  max-file-size: 10MB
  max-request-size: 10MB

aws:
  s3:
    endpoint-url: http://localhost:4566
    bucket-name: uploads

jwt-variables:
  EXPIRES_ACCESS_TOKEN_MINUTE: 200000
  ISSUER: rezztoran
  KEY: rezztoran
logging:
  level:
    org:
      hibernate: INFO
      springframework:
        web: DEBUG

resilience4j:
  ratelimiter:
    instances:
      basic:
        limit-for-period: 10
        limit-refresh-period: 1m
        timeout-duration: 10s
      auth:
        limit-for-period: 3
        limit-refresh-period: 15s
        timeout-duration: 10s

mail:
  address: MAIL
  password: PASSWORD
springdoc:
  swagger-ui:
    path: /swagger-ui.html